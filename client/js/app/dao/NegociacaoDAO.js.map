{"version":3,"sources":["../../app-es6/dao/NegociacaoDAO.js"],"names":["NegociacaoDAO","connection","_connection","_store","negociacao","Promise","resolve","reject","request","transaction","objectStore","add","onsuccess","onerror","console","log","e","target","error","cursor","openCursor","negociacoes","atual","result","dado","value","push","Negociacao","_data","_quantidade","_valor","continue","name","clear"],"mappings":";;;;;;IAAMA,a;AAGF,2BAAYC,UAAZ,EAAwB;AAAA;;AACpB,aAAKC,WAAL,GAAmBD,UAAnB;AACA,aAAKE,MAAL,GAAc,aAAd;AACH;;;;iCAEQC,U,EAAY;AAAA;;AAEjB,mBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,oBAAIC,UAAU,MAAKN,WAAL,CAAiBO,WAAjB,CAA6B,MAAKN,MAAlC,EAA0C,WAA1C,EACTO,WADS,CACG,MAAKP,MADR,EAETQ,GAFS,CAELP,UAFK,CAAd;;AAIAI,wBAAQI,SAAR,GAAoB,aAAK;AACrB;AACAN;AACH,iBAHD;;AAKAE,wBAAQK,OAAR,GAAkB,aAAK;AACnBC,4BAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,2BAAO,0CAAP;AACH,iBAHD;AAIH,aAdM,CAAP;AAeH;;;qCAEY;AAAA;;AAET,mBAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,oBAAIY,SAAS,OAAKjB,WAAL,CAAiBO,WAAjB,CAA6B,OAAKN,MAAlC,EAA0C,WAA1C,EACRO,WADQ,CACI,OAAKP,MADT,EAERiB,UAFQ,EAAb;AAGA,oBAAIC,cAAc,EAAlB;AACAF,uBAAOP,SAAP,GAAmB,aAAK;AACpB,wBAAIU,QAAQN,EAAEC,MAAF,CAASM,MAArB;;AAEA,wBAAID,KAAJ,EAAW;AACP,4BAAIE,OAAOF,MAAMG,KAAjB;AACAJ,oCAAYK,IAAZ,CAAiB,IAAIC,UAAJ,CAAeH,KAAKI,KAApB,EAA2BJ,KAAKK,WAAhC,EAA6CL,KAAKM,MAAlD,CAAjB;AACAR,8BAAMS,QAAN;AAEH,qBALD,MAKO;;AAEH;AACA;;AAEAjB,gCAAQC,GAAR,CAAYM,WAAZ;AACAf,gCAAQe,WAAR;AAEH;AAEJ,iBAlBD;;AAoBAF,uBAAON,OAAP,GAAiB,aAAK;AAClBC,4BAAQC,GAAR,CAAY,WAAWC,EAAEC,MAAF,CAASC,KAAT,CAAec,IAAtC;AACAzB,2BAAOS,EAAEC,MAAF,CAASC,KAAhB;AAEH,iBAJD;AAMH,aAhCM,CAAP;AAkCH;;;qCAEY;AAAA;;AAEb,mBAAO,IAAIb,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,oBAAIC,UAAU,OAAKN,WAAL,CACTO,WADS,CACG,CAAC,OAAKN,MAAN,CADH,EACkB,WADlB,EAETO,WAFS,CAEG,OAAKP,MAFR,EAGT8B,KAHS,EAAd;;AAKAzB,wBAAQI,SAAR,GAAoB;AAAA,2BAAKN,QAAQ,mCAAR,CAAL;AAAA,iBAApB;;AAEAE,wBAAQK,OAAR,GAAkB,aAAK;AACrBC,4BAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,2BAAO,yCAAP;AACL,iBAHG;AAID,aAbI,CAAP;AAcD","file":"NegociacaoDAO.js","sourcesContent":["class NegociacaoDAO {\n\n\n    constructor(connection) {\n        this._connection = connection;\n        this._store = 'negociacoes';\n    }\n\n    adiciona(negociacao) {\n\n        return new Promise((resolve, reject) => {\n            let request = this._connection.transaction(this._store, 'readwrite')\n                .objectStore(this._store)\n                .add(negociacao);\n\n            request.onsuccess = e => {\n                //inserido com sucesso!!\n                resolve();\n            };\n\n            request.onerror = e => {\n                console.log(e.target.error);\n                reject('Não foi possível adicionar a negociação!');\n            };\n        });\n    }\n\n    listaTodos() {\n\n        return new Promise((resolve, reject) => {\n\n            let cursor = this._connection.transaction(this._store, 'readwrite')\n                .objectStore(this._store)\n                .openCursor();\n            let negociacoes = [];\n            cursor.onsuccess = e => {\n                let atual = e.target.result;\n\n                if (atual) {\n                    let dado = atual.value;\n                    negociacoes.push(new Negociacao(dado._data, dado._quantidade, dado._valor));\n                    atual.continue();\n\n                } else {\n\n                    // quando não há mais objects em nossa store.\n                    // Isso significa que já terminados de popular negociacoes\n\n                    console.log(negociacoes);\n                    resolve(negociacoes);\n\n                }\n\n            };\n\n            cursor.onerror = e => {\n                console.log('Error:' + e.target.error.name);\n                reject(e.target.error);\n\n            };\n\n        });\n\n    }\n\n    apagaTodos() {\n\n    return new Promise((resolve, reject) => {\n\n        let request = this._connection\n            .transaction([this._store], 'readwrite')\n            .objectStore(this._store)\n            .clear();\n\n        request.onsuccess = e => resolve('Negociações removidas com sucesso');\n\n        request.onerror = e => {\n          console.log(e.target.error);\n          reject('Não foi possível remover as negociações');\n    }\n      });\n  }\n}"]}